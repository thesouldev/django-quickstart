services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  web:
    build: .
    platform: linux/amd64
    command: poetry run python src/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}

  celery:
    build: .
    platform: linux/amd64
    command: poetry run celery -A core worker -l WARNING
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
      - web
    env_file:
      - .env
    entrypoint: ["/bin/sh", "/app/scripts/celery-entrypoint.sh"]

  celery-beat:
    build: .
    platform: linux/amd64
    command: poetry run celery -A core beat -l WARNING
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
      - web
    env_file:
      - .env
    entrypoint: ["/bin/sh", "/app/scripts/celery-entrypoint.sh"]

volumes:
  postgres_data:
  rabbitmq_data:
